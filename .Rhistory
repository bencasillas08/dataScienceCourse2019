clc
install.packages("swirl")
library("swirl")
sudo apt-get -y build-dep libcur14-gnults-dev
install.packages('swirl')
library(swirl)
install.packages("swirl")
install.packages("httr")
install.packages("deb")
sudo apt-get -y build-dep libcurl4-gnutls-dev
library(MASS, lib.loc = "/usr/lib/R/library")
detach("package:MASS", unload = TRUE)
library(pkgconfig)
install.packages("swirl")
?INCLUDE_DIR
'??INCLUDE_DIR'
install.packages("sys")
install.packages("swirl")
install.packages("httr")
install.packages("swirl")
q()
library(swirl)
install.packages("dplyr")
library(swirl)
swirl()
bye()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4) + c(0, 10, 100)
z*2+1000
my
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
1:0.5:20
sep(1 , 20 , by=0.5)
seq(1 , 20 , by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect[num_vect < 1]
tf <- numvect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My" "name" "is")
?c
my_char <- c("My","name","is")
my_char
past(my_char,collapse = " ")
paste(my_char,collapse = " ")
c(my_char,"Ben")
my_name <- c(my_char,"Ben")
my_name
paste(my_name,collapse = " ")
paste("Hello,"world!", sep = " ")
paste("Hello" , "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,10)]
x[c(-2,-110)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(Vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identival(vect,vect2)
?identical
identical(vect,vect2)
vect[2]
vect["bar"]
vect[c("foo","bar")]
swirl()
bye()
swirl()
library(swirl)
install_course("Exploratory_Data_Analisys")
library(swirl)
install_course("Exploratory Data Analisys")
install_course("Exploratory Data Analisys")
install_course("Exploratory Data Analisys")
library(swirl)
install_course(Regression Models)
install_course("Regression Models")
swirl()
library(swirl)
install_course("Getting and Cleaning Data")
install_course("Data Analisys")
swirl()
library(swirl)
install_course("Data Analysis")
library(swirl)
install_course("Data Analisys")
install_course("Exploratory Data Analisys")
swirl()
library(swirl)
install_course("Statistical Inference")
install_course("Data Analysis")
install_course("Exploratory Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
bye()
swirl()
library(swirl)
install_course("Data Analysis")
install_course("Data Analysis")
swirl()
s <- 0; for (i in 1:100) {s <- s+1}
s <- 0; for (i in 1:100) {s[i] <- s+1}
s <- 0; for (i in 1:100) {s[i] <- i}
s <- 0; i <- 1; while (s < 101) { s[i] <- i; i<-i+1}
s <- 0; i <- 1; while (s <= 101) { s[i] <- i; i<-i+1}
s <- 0; i <- 1; while (i <= 101) { s[i] <- i; i<-i+1}
s <- 0; i <- 1; while (i < 101) { s[i] <- i; i<-i+1}
max(s)
clear s
s <- 1; for (i in 1:99) {s[i] <- s[i]+2 }
s <- 1;
s <- 1; for (i in 2:99) {s[i] <- s[i-1]+2 }
max(s)
s[50]
s <- 1; for (i in 2:50) {s[i] <- s[i-1]+2 }
max(s)
s <- 1; i <- 2; while (i < 50) { s[i] <- s[i-1]+2; i<-i+1}
max(s)
s <- 1; i <- 2; while (i < 51) { s[i] <- s[i-1]+2; i<-i+1}
max(s)
rm(s)
?c
cont <- 1:2:99
cont <- c(1,1:2:99)
cont <- seq(1,99, by=2)
max(cont)
i=2; cont=1; n=17;  # cualquier número "n" que se quiera asignar
while (cont[i] <= n) { cont[i] <- cont[i-1]+2; i<-i+1}
i=2; cont=1; n=17;  # cualquier número "n" que se quiera asignar#
while (cont[i] <= n) { cont[i] <- cont[i-1]+2; i<-i+1}
?while
max(n)
{}
while (i<1)
ab=n+1/2
ab
ab=(n+1)/2
ab
cont=1; n=17;
ab=n+1/2;
ab=(n+1)/2;
for (i in 2:ab) {cont[i] <- cont[i-1]+2}
i
max(cont)
t <- 1;
for (i in 2:ab) {t[i] <- sum(cont[1:i])}
t
2^2
cont=1; n=17;
ab=(n+1)/2;
cont <- seq(1,n, by=2);
cont
t <- 1;
for (i in 2:ab) {t[i] <- sum(cont[1:i])}
t
ab
max(cont)
lst <-('caso','control',c(1:10))
lst <- list('caso','control',c(1:10))
class(lst[3])
View(lst)
v1 <- lst[3]
class(v1)
View(v1)
print(v1)
swirl()
library(swirl)
ls
swirl()
rm(lst)
rm(v1)
swirl()
x <- vector("numeric",3)
print(x)
x$'z'
names(x) <- c("x","y","z")
x$'z'
x$ 'z'
x $'z'
x["z"]
x <- c('TRUE','TRUE','FALSE')
class(x)
lst <- list('caso','control',c(1:10))
v1 <- lst[3]
class(v1)
rm(lst)
r(x)
r(v1)
rm(v1)
rm(x)
?seq
sueldos <- read.table('8 LGT_Art_70_Fr_VIII_1er semestre_229363.tsv,sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header=TRUE)
sueldos <- read.table('8 LGT_Art_70_Fr_VIII_1er semestre_229363.tsv',sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header=TRUE)
sueldos <- read.table('8 LGT_Art_70_Fr_VIII_1er semestre_229363.tsv',sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header=TRUE)
?setwd
getwd()
setwd("/home/ben/dataScience/data")
sueldos <- read.table('8 LGT_Art_70_Fr_VIII_1er semestre_229363.tsv',sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header=TRUE)
class(sueldos)
str(sueldos)
dim(sueldos)
names(sueldos)
head(sueldos)
?setwd
gender <- sueldos$'SEXO (CATALAGO)'
head(gender)
View(sueldos)
View(sueldos)
head(sueldos[3, ])
View(sueldos)
View(sueldos)
test <- head(sueldos[3,])
View(test)
View(test)
View(test)
View(test)
?rm
rm(test)
rm(gender)
test <- sueldos[1:3,1:2]
view(test)
View(test)
View(test)
rm(test)
test <- sueldos[1:3,c('ID',"EJERCICIO")]
View(test)
rm(test)
test <- sueldos[sueldos$'SEXO..CATALOGO' == 'FEMENINO',1:5]
View(test)
View(test)
View(test)
test <- sueldos[sueldos$'SEXO..CATÁLOGO' == 'FEMENINO',1:5]
View(test)
View(test)
test <- sueldos[sueldos$'SEXO..CATÁLOGO' == 'Femenino',1:5]
View(test)
rm(test)
test <- head(sueldos[sueldos$'SEXO..CATÁLOGO' == 'Femenino',1:5])
View test
View(test)
View(test)
rm(test)
rm(sueldos)
setwd(~)
setwd('/home/ben/dataScienceCourse2019')
?print
x <- c('10.5','6','5','8','5');  print(x)
as.numeric(x); print(x)
as.numeric(x)
ax.integrer(x)
ax.integer(x)
as.integer(x)
l = c(0,1,10.5)
l = c(0,1,10.5); as.logical(l)
l = c(0,1,10.5); print(l); as.logical(l)
y = c('3.1416','0.999','3M','2,6')
y = c('3.1416','0.999','3M','2,6'); print(y); as.numeric(y)
?NA
sum(as.numeric(y))
x = c(0.9,4.5,'3');
print(x)
class(x)
rm(list=ls())
path = 'https://raw.githubusercontent.com/caramirezal/dataScience/master/data/NIHMS53736-supplement-9.csv';
download.file(path,destfile = 'NIHMS53736-supplement-9.csv')
readLines('NIHMS53736-supplement-9.csv',n=5)
transcripts = read.csv('NIHMS53736-supplement-9.csv',header=TRUE);
class(transcripts); dim(transcripts); str(transcripts);
path <- 'https://github.com/caramirezal/dataScience/raw/master/data/8%20LGT_Art_70_Fr_VIII_1er%20semestre_229363.tsv'
download.file(path, "sueldos_CONACYT.tsv")
readLines("sueldos_CONACYT.tsv", n=5)
sueldos = read.table (path, sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header,TRUE)
sueldos = read.table (path, sep='\t',skip=5,quote="",stringsAsFactors=FALSE,header=TRUE)
str(sueldos)
str?
?str
library(readr);
sueldos=read.tsv(path,skip=5,quote="",col_names=TRUE);
install.packages("readr")
library(readr);
sueldos=read.tsv(path,skip=5,quote="",col_names=TRUE);
sueldos=read_tsv(path,skip=5,quote="",col_names=TRUE);
str(sueldos)
setwd('/home/Ben/dataScienceCourse2019'); rm(list=ls());
getwd()
rm(list=ls());
path <- 'https://raw.githubusercontent.com/caramirezal/dataScience/master/data/NIHMS53736-supplement-9.csv'
transcripts <- read.csv(path,header = TRUE)
transcriptsNum = transcripts[ ,2:ncol(transcripts)]; str(transcriptsNum);
means = vector('numeric',ncol(transcriptsNum))
for (i in 1:col(transcriptsNum)) { means{i} = mean(transcriptsNum[,i]) }
means
for (i in 1:col(transcriptsNum)) { means[i] = mean(transcriptsNum[,i]) }
means
means = vector('numeric',ncol(transcriptsNum))
View(means)
for (i in 1:col(transcriptsNum)) { means[i] = mean(transcriptsNum[,i]) }
View(means)
View(transcriptsNum)
mean(transcriptsNum[,1]
)
mean(transcriptsNum[,2])
mean(transcriptsNum[,3])
i
for (i in 1:ncol(transcriptsNum)) { means[i] = mean(transcriptsNum[,i]) }
means
?ncol
meansSapply = sapply(transcriptsNum, mean); meanSapply
meanSapply <- vector('numeric', ncol(transcriptsNum))
meansSapply = sapply(transcriptsNum, mean); meanSapply
rm(meansSapply)
meanSapply <- vector('numeric', ncol(transcriptsNum))
meanSapply = sapply(transcriptsNum, mean); meanSapply
meanSapply = sapply(transcriptsNum,mean,na.rm=TRUE)
head(meanSapply)
meanlapply = lapply(transcriptsNum,mean); head(meanlapply)
meanbycol = apply(transcriptsNum,1,mean); head(meanbycol)
meanbyrow = apply(transcriptsNum,1,mean); head(meanbyrow)
meanbycol = apply(transcriptsNum,2,mean); head(meanbycol)
transcriptsNorm = sapply(transcriptsNum, function(x) (x-min(x))/(max(x)-min(x)) )
View(transcriptsNorm)
dim(transcriptsNorm)
head(transcriptsNorm[ ,1:5])
rm(list=ls())
path <- 'https://github.com/caramirezal/dataScience/raw/master/data/8%20LGT_Art_70_Fr_VIII_1er%20semestre_229363.tsv'
sueldos <- read.table(path,header = TRUE,sep = '\t',skip = 5,quote =""); names(sueldos)
names(sueldos)[c(16,18)] <- c('brute','net')
sueldos$'extraSalary'= 100*(sueldos$brute-sueldos$net/sueldos$brute); head(sueldos$extraSalary)
View(sueldos)
head(sueldos$extraSalary)
rm(list=ls());
path <- 'https://github.com/caramirezal/dataScience/raw/master/data/8%20LGT_Art_70_Fr_VIII_1er%20semestre_229363.tsv'
sueldos <- read.table(path,header = TRUE,sep = '\t',skip = 5,quote =""); names(sueldos)
View(sueldos)
dim(sueldos)
head(sueldos[,[16,18]])
names(sueldos)[c(16,18)] <- c('brute','net')
sueldos$brute-sueldos$net/sueldos$brute); head(sueldos$extraSalary)
(sueldos$brute-sueldos$net/sueldos$brute)
(100*(sueldos$brute-sueldos$net))/sueldos$brute
sueldos$'extraSalary'= (100*(sueldos$brute-sueldos$net))/sueldosbrute; head(sueldos$extraSalary)
sueldos$'extraSalary'= (100*(sueldos$brute-sueldos$net))/sueldos$brute; head(sueldos$extraSalary)
sueldos$translatedGenera = ifelse(sueldos$'SEXO..CATÁLOGO' == 'Femenino','Female','Male')
head(sueldos$translatedGenera)
head(is.na(sueldos$NOMBRE..S.))
sum(is.na(sueldos$FECHA.CREACION))
sum(complete.cases(sueldos))
?complete.cases
dim(sueldos)
complete.cases(sueldos)
sueldosFilteres <- sueldos[complete.cases(sueldos), ]
neto <- sueldos$net; max(as.numeric(neto))
table(sueldos$SEXO..CATÁLOGO)
head(sort(neto,decreasing=TRUE))
indexes <- order(net,decreasing=TRUE); head(sueldos[indexes,1:5])
indexes <- order(neto,decreasing=TRUE); head(sueldos[indexes,1:5])
library(dplyr)
sueldosRenamed <- rename(sueldos,
date = FECHA.CREACION,
userType = TIPO.DE.INTEGRANTE.DEL.SUJETO.OBLIGADO..CATÁLOGO.,
employmentType = DENOMINACIÓN.O.DESCRIPCIÓN.DEL.PUESTO,
position = DENOMINACIÓN.DEL.CARGO,
name = NOMBRE..S.,
surname_1 = PRIMER.APELLIDO,
surname_2 = SEGUNDO.APELLIDO,
genera = SEXO..CATÁLOGO.)
View(suledosRenamed)
View(sueldosRenamed)
sueldosSelected <- select(sueldosRenamed,date,userType,employmentType,position,name:brute,net)
str(sueldosSelected)
sueldosProcessed <- selct(sueldosSelected, -c(userType,employmentType))
sueldosProcessed <- select(sueldosSelected, -c(userType,employmentType))
sueldosFemenine <- filter(sueldosSelected,genera == 'Femenino')
View(sueldosFemenine)
dim(sueldosFemenine)
sueldosProcessed <- mutate(sueldosSelected,extraSalary=100*(brute-net)/brute)
View(sueldosProcessed)
dim(sueldosProcessed)
sueldosArrange = arrange(sueldosSelected, desc(brute))
dim(sueldosArrange)
View(sueldosArrange)
View(sueldosSelected)
arrage(sueldosSelected,desc(net)) %>% filter(genera == 'Femenino') %>% select(name:surname_2) %>% head
arrange(sueldosSelected,desc(net)) %>% filter(genera == 'Femenino') %>% select(name:surname_2) %>% head
